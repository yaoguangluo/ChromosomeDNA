package ME.APM.VSQ.dnn;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.Iterator;
import java.util.Map;

import ME.APM.VSQ.App;
//作者 罗瑶光
//20220701
//20220702 新增一个总分写表
public class WriteDNNMap{
	//这个函数用于dnn的全文索引进行txt记录
	public static void doWriteDNNMap(String stringPath, App app) {
		Map<String, Map<String, Double>> map= app.DNNmap;
		try {
			File file = new File(stringPath);  
			file.createNewFile();
			BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter
					(new FileOutputStream(file), "UTF8"));  
			Iterator<String> iterator= map.keySet().iterator();
			while(iterator.hasNext()) {
				String temp= iterator.next();
				//添加数据名
				bufferedWriter.write(temp+ "<>");
				bufferedWriter.write("\r\n");
				bufferedWriter.flush();
				Map<String, Double> maps= map.get(temp);
				Iterator<String> iterators= maps.keySet().iterator();
				//添加数据实体
				Double 总分= 0.0;
				while(iterators.hasNext()) {
					String string= iterators.next();
					Double tempDouble= Double.valueOf(maps.get(string));
					总分+= tempDouble;
					bufferedWriter.write(string+ "->"+ tempDouble);
					bufferedWriter.write("\r\n");
				}
				//DNN添加总分
				bufferedWriter.write("总分"+ "->"+ 总分);
				bufferedWriter.write("\r\n");
			}
			bufferedWriter.write("\r\n");
			bufferedWriter.flush();
			bufferedWriter.close();
		} catch (IOException e) {
			app.hook.hookFrequentException("WriteDNNMap出错", System.currentTimeMillis(), e);
		}
	}
}
